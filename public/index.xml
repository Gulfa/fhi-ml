<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FHI ML</title>
    <link>/</link>
    <description>Recent content on FHI ML</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 May 2019 21:48:51 -0700</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1. Introduction</title>
      <link>/dashboards/this-is-a-test/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/dashboards/this-is-a-test/</guid>
      <description>Executive summary The dashboards project is a project at FHI concerned with running automated analyses on data.
In principle, the dashboards project is split up into two parts:
 The umbrella infrastructure (i.e. Docker containers, continuous integration, chron jobs, etc.) The R package for each automated analysis  What is an automated analysis? An automated analysis is any analysis that:
 Will be repeated multiple times in the future Always has an input dataset with consistent file structure Always has the same expected output (e.</description>
    </item>
    
    <item>
      <title>1. Physical Hardware and Subscriptions</title>
      <link>/dashboards/this-is-a-test/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/dashboards/this-is-a-test/</guid>
      <description>Physical Hardware and Subscriptions  One Github organization (http://github.com/folkehelseinstituttet/) One Github team (https://github.com/orgs/folkehelseinstituttet/teams/dashboards) One drat repository (https://folkehelseinstituttet.github.io/drat/) One travis-ci.org account (http://travis-ci.org/folkehelseinstituttet) One travis-ci.com account (http://travis-ci.com/folkehelseinstituttet) One Docker hub account (http://hub.docker.com/u/raw996/) At least three computers:  Production linux computer smhb Integration testing linux computer linux Development linux computers (1 per person)   Production Computer - smhb Explanation smhb is designed to be extremely simple. It has two jobs:
 Updating raw996/dashboards_r:production, raw996/dashboards_shiny:production, and raw996/dashboards_nginx:production Making sure that docker-compose-prod.</description>
    </item>
    
    <item>
      <title>2b. Infrastructure (Docker)</title>
      <link>/dashboards/this-is-a-test/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/dashboards/this-is-a-test/</guid>
      <description>Analysis Docker Image Images Our analysis Docker images are based off the rocker images. More specifically, the rocker/verse:3.5.0 image.
This Docker image is then expanded upon by a separate Dockerfile raw996/dhadley. This Docker image is automatically rebuilt by Jenkins on linux whenever the repository is updated. The resultant Docker image is pushed to raw996/dhadley:3.5.0. This image is a general-purpose analysis image, with no sensitive information in it.
This Docker image is then expanded upon by a separate Dockerfile raw996/dashboards_r.</description>
    </item>
    
    <item>
      <title>2b. Infrastructure (Scripts)</title>
      <link>/dashboards/this-is-a-test/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/dashboards/this-is-a-test/</guid>
      <description>Overview Most of the bash scripts, Docker files, passwords, etc. are all hosted at the private Github repository raubreywhite/dashboards_control.
- $DASHBOARDS_FOLDER/dashboards_control/ |-- bin/ | |-- dev_down.sh | |-- dev_up.sh | |-- docker_build.sh | |-- docker_login.sh | |-- docker_push_test_to_prod.sh | |-- prod_down.sh | |-- prod_up.sh | |-- prod_update.sh | |-- public.sh | |-- test_noispiah.sh | |-- test_normomo.sh | |-- test_sykdomspuls_log.sh | |-- test_sykdomspuls_pdf.sh | |-- test_sykdomspuls.sh |-- docker-compose-api.yml |-- docker-compose-dev.yml |-- docker-compose-prod.</description>
    </item>
    
    <item>
      <title>3. R Packages</title>
      <link>/dashboards/this-is-a-test/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/dashboards/this-is-a-test/</guid>
      <description>Overview Each automated analysis has its own R package:
 sykdomspuls normomo noispiah sykdomspulspdf sykdomspulslog  Each R package contains all of the code necessary for that automated analysis. Typical examples are:
 Data cleaning Signal analysis Graph generation Report generation  Requirements The R packages should be developed using unit testing as implemented in the testthat package.
Furthermore, the R package should operate (and be able to be tested) independently from the real datasets on the system.</description>
    </item>
    
    <item>
      <title>4. Contributing Quickstart</title>
      <link>/dashboards/this-is-a-test/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/dashboards/this-is-a-test/</guid>
      <description>Quickstart  Create a project folder for your code (let us say ~/git/dashboards). This folder will be accessible from inside your Docker container as /dashboards/ Create a project folder for your data (let us say ~/data/). Clone the following repos inside ~/git/dashboards:  https://github.com/raubreywhite/dashboards_control/ (private)  Fork the following repos, and then clone the forks to your computer inside ~/git/dashboards (depending on which project you are working on):  https://github.</description>
    </item>
    
    <item>
      <title>5. Manual Actions</title>
      <link>/dashboards/this-is-a-test/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/dashboards/this-is-a-test/</guid>
      <description>Sykdomspulsen Sykdomspulsen Weekly update The weekly update needs to be done every Tuesday morning. New data has arrived from Helsedirektoratet to FHI during Monday evening and night, and the further statistical analysis and updating of the interactive webpage for Sykdomspulsen is done on Tuesday. For more information about Sykdomspulsen setup:
https://folkehelseinstituttet.github.io/dashboards/
https://folkehelseinstituttet.github.io/dashboards_sykdomspuls/
 Log in to «Sikker sone» Click on «Sikkersone statistikk» Open R or R studio by clicking on the four squares in the bottom left corner, then on the arrow pointing downwards approximately in the same area and search for R in the upper right corner When R is open, click on “file” in the upper left corner, and then “open script” Open G:/Helseregistre/MSIS/Sykdomspulsen/Gry/FormattingWithinSikkersone/</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>/post/2019/08/20/this-is-a-test/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/08/20/this-is-a-test/</guid>
      <description>Hello how are you</description>
    </item>
    
  </channel>
</rss>